@page
@using Westwind.AspNetCore.Markdown
@using global::Illusive.Utility
@using global::Illusive.Database
@using global::Illusive.Illusive.Core.User_Management.Extension_Methods
@using global::Illusive.Illusive.Core.User_Management.Interfaces
@using global::Illusive.Models.Extensions
@using Humanizer
@inject IAppUserManager UserManager
@model ForumPost
@{
    var content = this.Model.ForumData.Content;
    
    var initialLiked = this.Model.ForumData.HasLikeFrom(this.User);
    var likeCount = this.Model.ForumData.Likes.Count;
    
    ViewData["Title"] = this.Model.ForumData.Title;
    ViewData["Description"] = content.Length < 20 ? content : content.Substring(0, 20);
    
    @Html.AntiForgeryToken()
}

<!DOCTYPE html>

<html>
<head>
    <title>@this.Model.ForumData.Title</title>
    
    <meta property="og:title" content="@this.Model.ForumData.Title"/>
    <meta property="og:description" content="Created @this.Model.ForumData.TimeCreated.Humanize()"/>
    
    <script src="~/js/party.js"></script>
    <script src="js/ForumPost/requests.js"></script>
    <script type="text/javascript">
        $(function () {
            document.querySelector(".like-post-action").addEventListener("mouseup", (e) => {
                e.preventDefault();
                party.element(document.querySelector(".like-post-action"), {
                    count: party.variation(30, 0.5),
                    color: party.array(['#ffa68d', '#fd3a84'])
                });
            });
            // Initialise starting state
            SetLikeText($("span.like-post-text"), @Json.Serialize(likeCount));
            SetLikeState(@Json.Serialize(initialLiked));
        });
    </script>
    
    
    <style type="text/css">
        .commentField {
            width: 100%; 
            padding: 10px;
            margin: 10px 0;
            border: none;
            background-color: var(--container-colour-secondary);
            border-radius: 5px;
            color: inherit;
        }
        
        .forumTitle {
            margin-top: 25px;
        }
        
        .forumContent {
            background-color: var(--container-colour-secondary);
            border-bottom-left-radius: 7px;
            border-bottom-right-radius: 7px;
            padding: 15px;
            box-shadow: 0 1rem 1rem rgba(0, 0, 0, .1);
            word-wrap: break-word;
            width: 100%;
        }
        
        .forumContent img {
            display: block;
            max-height: 500px;
            width: auto;
        }
        
        .forumBody {
            width: 100%;
            display: inline-flex;
            margin-top: 30px;
            margin-bottom: 30px;
        }
        
        .replyBody {
            width: 100%;
            display: inline-flex;
            margin-top: 10px;
            margin-bottom: 10px;
            box-shadow: 0 1rem 1rem rgba(0, 0, 0, .1);
        }
        
        .replyContent {
            background-color: var(--container-colour-secondary);
            border-bottom-left-radius: 7px;
            border-bottom-right-radius: 7px;
            padding: 15px;
            word-wrap: break-word;
            width: 100%;
        }
        
        .forum-actions-container {
            background-color: var(--container-colour-primary);
            padding: 3px;
            display: flex;
            border-radius: 5px;
        }
        
        .forum-action {
            display: initial;
            width: initial;
            max-width: 35px;
            margin: 2px;
            height: 25px;
            cursor: pointer;
        }
    </style>
</head>
<body>

@{
    var forum = this.Model.ForumData;
    // var forumOwner = AccountService.GetAccountWhere(x => x.Id == forum.OwnerId);
    var forumOwner = await UserManager.GetUserByIdAsync(forum.OwnerId);
}

<div>
    <span style="display: block ruby; padding-bottom: 8px; border-bottom: 1px solid black">
        <h3 class="forumTitle">@forum.Title</h3>
        @if ( forum.Tags != null ) {
            foreach ( var tag in forum.Tags.Split(',') ) {
                <div class="forumTag noselect">@tag</div>
            }
        }
    </span>
    
    <div class="forum-actions-container" style="margin-top: 10px">
        @if ( this.User.CanDeletePost(forum) || this.User.IsAdminAccount() ) {
            <div class="hovertip delete-post-action" onclick="DeletePost('@forum.Id')">
                <img src="https://illusivecdn.blob.core.windows.net/container-1/trash_icon.png" height="28px" width="28px" alt=""/>
                <span class="hovertiptext-top">Delete post</span>
            </div>

            <a asp-page="EditPost" asp-route-id="@forum.Id">
                <div class="hovertip">
                    <img src="https://illusivecdn.blob.core.windows.net/container-1/icon-edit.png" height="28px" width="28px" style="padding: 3px" alt=""/>
                    <span class="hovertiptext-top">Edit post</span>
                </div>
            </a>

            <div class="hovertip" onclick="LockPost('@forum.Id')">
                @if ( forum.IsLocked ) {
                    <img style="width: 20px; height: 20px;" src="https://illusivecdn.blob.core.windows.net/container-1/icon-padlock-locked.png" alt=""/>
                    <span class="hovertiptext-top">Unlock post</span>
                } else {
                    <img style="width: 20px; height: 20px;" src="https://illusivecdn.blob.core.windows.net/container-1/icon-padlock-unlocked.png" alt=""/>
                    <span class="hovertiptext-top">Lock post</span>
                }
            </div>
        }
    </div>

    <div class="forumBody">
        <div class="forum-author-container">
            <a href="/Account/@forumOwner?.Id"> <img class="forum-author-picture" style="margin: 5px auto auto;height: 40px; width: 40px; border-radius: 25px" src="@forumOwner?.ProfilePicture" alt=""></a>
            <p style="font-size: 0.6rem; margin: 0 0.1rem;">
                @if ( await UserManager.IsUserAdmin(forumOwner) ) {
                    <span style="color: red;">[Admin]</span>
                }
                <a href="/Account/@forumOwner?.Id"> @forumOwner?.UserName</a>
            </p>
            <p style="font-size: 0.5rem; font-style: italic">Joined @forumOwner?.CreatedOn.ToShortDateString()</p>
        </div>

        <div class="forumContent">
            @if ( this.User.IsLoggedIn() ) {
                <div class="forum-actions-container hovertip float-right">
                    <img class="forum-action like-post-action" onclick="LikePost('@forum.Id')" src="https://illusivecdn.blob.core.windows.net/container-1/like_button_unchecked.png" alt="">
                    <span class="hovertiptext-top like-post-text"></span>
                </div>
            }

            <span style="font-style: italic; font-size: 0.6rem; display: flex; margin-bottom: 10px">Created @forum.TimeCreated.Date.ToString("MMMM dd, yyyy") (@(forum.TimeCreated.TimeSince().Humanize()) ago)</span>

            <p style="min-width: 100%; width: 0">@Markdown.ParseHtmlString(forum.Content)</p>
        </div>
    </div>

    <div style="width: 100%; border-bottom: 1px solid black;">
        <h4 style="display: inline-flex">Comments
            @if ( !this.User.IsLoggedIn() ) {
                <div style="font-size: 0.7rem; height: 100%; margin: auto auto auto 5px;">(<a href="/Login">Login</a> or <a href="/Signup">Sign up</a> to comment on a post!)</div>
            }
        </h4>
    </div>

    @{
        var replies = forum.Replies;
        foreach ( var reply in replies ) {
            var replyOwner = await UserManager.GetUserByIdAsync(reply.AuthorId);

            <div class="replyBody">
                <div style="width: 100px; min-width: 100px; height: 100px; background-color: var(--container-colour-primary); display: grid; text-align: center; border-radius: 4px;">
                    <img style="margin: 5px auto auto;height: 40px; width: 40px; border-radius: 25px" src="@replyOwner?.ProfilePicture" alt="">
                    <p style="font-size: 0.6rem; margin: 0 0.1rem;">
                        @if ( await UserManager.IsUserAdmin(replyOwner) ) {
                            <span style="color: red;">[Admin]</span>
                        }
                        <a href="/Account/@replyOwner?.Id"> @replyOwner?.UserName</a>
                    </p>
                    <p style="font-size: 0.5rem; font-style: italic">Joined @replyOwner?.CreatedOn.ToShortDateString()</p>
                </div>

                <div class="replyContent">
                    <span style="font-style: italic; font-size: 0.6rem; display: flex; margin-bottom: 10px">Commented @reply.TimeCreated.ToString("MMMM dd, yyyy") (@(reply.TimeCreated.TimeSince().Humanize()) ago)</span>

                    @if ( this.User.CanDeleteReply(reply) || this.User.IsAdminAccount() ) {
                        <div class="hovertip float-right" onclick="DeleteReply('@reply.Id');">
                            <img src="https://illusivecdn.blob.core.windows.net/container-1/trash_icon.png" height="28px" width="28px" alt=""/>
                            <span class="hovertiptext-top">Delete reply</span>
                        </div>
                    }
                    
                    <p style="min-width: 100%; width: 0">@reply.Content</p>
                </div>
            </div>
        }
    }

    @{
        if ( forum.IsLocked ) {
            <div class="container text-center m-3">
                <p>You cannot comment because this forum has been locked.</p>
            </div>
        } else if ( this.User.IsLoggedIn() ) {
            <form method="post">
                <div asp-validation-summary="All" class="text-danger"></div>
                <textarea class="commentField" asp-route-id="@forum.Id" asp-for="ForumReply.Content" placeholder="Reply to this post" multiple></textarea><br/>
                <button type="submit" class="button debounce">Comment on this</button>
            </form>
        }
    }
</div>
</body>
</html>