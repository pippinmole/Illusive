@page
@using Westwind.AspNetCore.Markdown
@using Humanizer
@using global::Illusive.Illusive.Database.Interfaces
@using global::Illusive.Illusive.Utilities
@using global::Illusive.Illusive.Database.Models
@using global::Illusive.Illusive.Authentication.Utility
@inject IAccountService AccountService
@model ForumPost
@{
    ViewData["Title"] = this.Model.ForumData.Title;
}

<!DOCTYPE html>

<html>
@Html.AntiForgeryToken()
<head>
    <title>@this.Model.ForumData.Title</title>
    
    <style type="text/css">
        
        .commentField {
            width: 100%; 
            padding: 10px;
            margin: 10px 0;
            border: none;
            background-color: #EAEAEA;
            border-radius: 5px;
        }
        
        .forumTitle {
            margin-top: 25px;
        }
        
        .forumContent {
            background-color: #f1f1f1;
            border-bottom-left-radius: 7px;
            border-bottom-right-radius: 7px;
            padding: 15px;
            box-shadow: 0 1rem 1rem rgba(0, 0, 0, .1);
            word-wrap: break-word;
            width: 100%;
        }
        
        .forumContent img {
            display: block;
            max-height: 500px;
            width: auto;
        }
        
        .forumBody {
            width: 100%;
            display: inline-flex;
            margin-top: 30px;
            margin-bottom: 30px;
        }
        
        .replyBody {
            width: 100%;
            display: inline-flex;
            margin-top: 10px;
            margin-bottom: 10px;
            box-shadow: 0 1rem 1rem rgba(0, 0, 0, .1);
        }
        
        .replyContent {
            background-color: #f1f1f1;
            border-bottom-left-radius: 7px;
            border-bottom-right-radius: 7px;
            padding: 15px;
            word-wrap: break-word;
            width: 100%;
        }
        
        .forum-actions-container {
            background-color: #dde8f9;
            float: right;
            padding: 3px;
            display: flex;
            border-radius: 5px;
        }
        
        .forum-action {
            display: initial;
            width: initial;
            max-width: 35px;
            margin: 2px;
            height: 25px;
            cursor: pointer;
        }
    </style>
    
    @section scripts {
        <script>
        
        // Received a boolean state (True = liked, False = unliked)
        function UpdateLikeButton(state) {
            const likeImage = $(".like-post-action");
            
            if (state === true) {
                console.log("Set button to liked");
                likeImage.attr("src","https://illusivecdn.blob.core.windows.net/container-1/like_button_checked.png");
            } else {
                console.log("Set button to unliked");
                likeImage.attr("src","https://illusivecdn.blob.core.windows.net/container-1/like_button_unchecked.png");
            }
        }
        
        // Updates the amount of likes
        function UpdateLikeCounter(likes) {
            const likeText = $("p.like-post-text");   
            likeText.text(likes + (likes === 1 ? " like" : " likes"));
        }
        
        $(function () {
            // Initialise starting state
            @{
                var initialLiked = this.Model.ForumData.HasLikeFrom(this.User);
                var likeCount = this.Model.ForumData.Likes.Count;
            }
            
            UpdateLikeButton(@Json.Serialize(initialLiked));
            UpdateLikeCounter(@Json.Serialize(likeCount));
            
            // Like button request
            $(".like-post-action").click(function () {
                $.ajax({
                    type: "POST",
                    url: "/ForumPost?handler=LikePost",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({
                        "forumId" : "@this.Model.ForumData.Id"
                    }),
                    success: function (response) {
                        // console.log(JSON.stringify(response))
                        UpdateLikeButton(response.result === "liked");
                        UpdateLikeCounter(response.likeCount);
                    },
                    failure: function (response) {
                        alert(response);
                    }
                });
            });
        });
        </script>
    }
</head>
<body>

@{
    var forum = this.Model.ForumData;
    var forumOwner = AccountService.GetAccountWhere(x => x.Id == forum.OwnerId);
}

<div>
    <span style="display: block ruby; padding-bottom: 8px; border-bottom: 1px solid black">
        <h3 class="forumTitle">@forum.Title</h3>
        @if ( forum.Tags != null ) {
            foreach ( var tag in forum.Tags.Split(',') ) {
                <div class="forumTag noselect">@tag</div>
            }
        }
    </span>

    <div class="forumBody">
        <div class="forum-author-container" style="background-color: #dfedee;">
            <img class="forum-author-picture" style="margin: 5px auto auto;height: 40px; width: 40px; border-radius: 25px" src="@forumOwner?.ProfilePicture" alt="">
            <p style="font-size: 0.6rem; margin-bottom: 0"> @forumOwner?.AccountName </p>
            <p style="font-size: 0.5rem; font-style: italic">Joined @forumOwner?.AccountCreated.ToShortDateString()</p>
        </div>

        <div class="forumContent">
            @if ( this.User.IsLoggedIn() ) {
                <div class="forum-actions-container">
                    <img class="forum-action like-post-action" src="https://illusivecdn.blob.core.windows.net/container-1/like_button_unchecked.png" alt="">
                    <p style="margin: auto 5px;" class="like-post-text"></p>
                </div>
            }

            <span style="font-style: italic; font-size: 0.6rem; display: flex; margin-bottom: 10px">Created @forum.TimeCreated.Date.ToString("MMMM dd, yyyy") (@(forum.TimeCreated.TimeSince().Humanize()) ago)</span>

            <p>@Markdown.ParseHtmlString(forum.Content)</p>
        </div>
    </div>

    <div style="width: 100%; border-bottom: 1px solid black;">
        <h4 style="display: inline-flex">Comments
            @if ( !this.User.IsLoggedIn() ) {
                <div style="font-size: 0.7rem; height: 100%; margin: auto auto auto 5px;">(<a href="/Login">Login</a> or <a href="/Signup">Sign up</a> to comment on a post!)</div>
            }
        </h4>
    </div>
        
    @{
        var replies = forum.Replies;
        foreach ( var reply in replies ) {
            var replyOwner = AccountService.GetAccountWhere(x => x.Id == reply.AuthorId);

            <div class="replyBody">
                <div style="width: 100px; height: 100px; background-color: #ddd; display: grid; text-align: center; border-radius: 4px;">
                    <img style="margin: 5px auto auto;height: 40px; width: 40px; border-radius: 25px" src="@replyOwner.ProfilePicture" alt="">
                    <p style="font-size: 0.6rem; margin-bottom: 0"> @replyOwner.AccountName </p>
                    <p style="font-size: 0.5rem; font-style: italic">Joined @replyOwner.AccountCreated.ToShortDateString()</p>
                </div>

                <div class="replyContent">
                    <span style="font-style: italic; font-size: 0.6rem; display: flex; margin-bottom: 10px">Commented @reply.TimeCreated.ToString("MMMM dd, yyyy") (@(reply.TimeCreated.TimeSince().Humanize()) ago)</span>

                    <p>@reply.Content</p>
                </div>
            </div>
        }
    }

    @{
        if ( this.User.IsLoggedIn() ) {
            <form method="post">
                <textarea class="commentField" asp-route-id="@forum.Id" asp-for="ForumReply.Content" placeholder="Reply to this post" multiple></textarea><br/>
                <button type="submit">Comment on this</button>
            </form>
        }
    }
</div>
</body>
</html>