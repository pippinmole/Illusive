@page "/posts"
@using global::Illusive.Utility
@model ForumModel
@{
    ViewData["Title"] = "Forum";
    ViewData["Description"] = "Forum posts and blogs";
}

@section Scripts {
    <script type="text/javascript">    
        window.addEventListener("load", () => {
            const orderBy = $(".order-by");
            orderBy.val(GetQueryValue("orderby"));
            orderBy.on('change', (e) => {
                SetQueryValue("orderby", e.target.value);
            });
        });
        
        function IncrementPageCount() {
            const val = Math.min(parseInt(GetQueryValue("pageCount")) + 1, 10);
            SetQueryValue("pageCount", val)
        }
        function DecrementPageCount() {
            const val = Math.max(parseInt(GetQueryValue("pageCount")) - 1, 1);
            SetQueryValue("pageCount", val)
        }
    </script>
}

<div class="text-center">
        <h1 class="display-4">@ViewData["Title"]</h1>
            
        @if ( !User.IsLoggedIn() ) {
            <div><a href="/Login">Login</a> or <a href="/Signup">Sign up</a> to create a post!</div>
        } else {
            <div><a href="/CreatePost">Create a post!</a></div>
        }
    </div>

<div class="container row">
    <div class="col-lg-3">
        <!-- Forum post filter -->
        <div style="width: 100%; height: 100%; background-color: white;">
            <form asp-page-handler="UpdateFilters" method="post">
                <input asp-for="Filters.Tags" placeholder="Tags (separated by commas)"/>
            </form>
        </div>
    </div>
    <div class="col-lg-9">
        <select class="order-by" style="margin: auto; background-color: var(--container-colour-primary); padding: 5px; border: none; border-radius: 5px; color: inherit">
            <option value="views-asc">Order by views (Ascending)</option>
            <option value="views-desc">Order by views (Descending)</option>
            <option value="likes-asc">Order by likes (Ascending)</option>
            <option value="likes-desc">Order by likes (Descending)</option>
            <option value="date-desc">Order by date (Newest first)</option>
            <option value="date-asc">Order by date (Oldest first)</option>
        </select>
        
        <div style="margin-top: 15px">
            @if ( Model.Forums.Page != 1 ) {
                <span class="button previous" onclick="DecrementPageCount()">&laquo; Previous</span>
            }
            @if ( Model.Forums.Page < Model.Forums.PageCount ) {
                <span class="button next" onclick="IncrementPageCount()">Next &raquo;</span>
            }
        </div>
        
        <div>
            @{
                var postResults = Model.Forums;
                foreach ( var forum in postResults.Posts ) {
                    @await Html.PartialAsync("Partials/_ForumPostComponent", model: forum)
                }
        
                <h5>Page @postResults.Page of @postResults.PageCount</h5>
        
                <div style="margin-top: 15px">
                    @if ( Model.Forums.Page != 1 ) {
                        <span class="button previous" onclick="DecrementPageCount()">&laquo; Previous</span>
                    }
                    @if ( Model.Forums.Page < Model.Forums.PageCount ) {
                        <span class="button next" onclick="IncrementPageCount()">Next &raquo;</span>
                    }
                </div>
            }
        </div>
    </div>
    
</div>