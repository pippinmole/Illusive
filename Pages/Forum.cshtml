@page
@using global::Illusive.Utility
@using global::Illusive.Database
@using Humanizer
@using Microsoft.AspNetCore.Http
@inject IAccountService AccountService
@model ForumModel
@{
    ViewData["Title"] = "Forum";
    ViewData["Description"] = "Forum posts and blogs";
}

<!DOCTYPE html>

<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    
    <script>
        function displayMessage(message) {
            $(".message-window > span#message").text(message);
            $(".message-window").addClass("show").delay(3000).queue(function () {
                $(this).removeClass("show").dequeue();
            });
        }
        
        jQuery(document).ready(function ($) {
            $('#feedback-form').submit(function (event) {
                event.preventDefault();
                grecaptcha.execute('site_key', { action: 'submit' }).then(function (token) {
                    var data = {
                        name: $('#name').val(),
                        email: $('#email').val(),
                        feedback: $('#feedback').val(),
                        token: token
                    }
                    $.ajax({
                        type: 'POST',
                        url: '/api/feedback',
                        data: JSON.stringify(data),
                        contentType: 'application/json',
                        dataType: "json",
                        cache: false,
                        complete: function (event) {
                            switch(event.status) {
                                case 200:
                                    $('#name').val('');
                                    $('#email').val('');
                                    $('#feedback').val('');
                                    displayMessage('Thank you for submitting your feedback!');
                                    break;
                                case 403:
                                    displayMessage('Are you a robot?');
                                    break;
                                default:
                                    displayMessage('Something went wrong. Please try later.');
                                    break;
                            }
                        }
                    });
                });
            });
        });
    </script>
    
    <script type="text/javascript">    
        window.addEventListener("load", () => {
            const orderBy = $(".order-by");
            orderBy.val(GetQueryValue("orderby"));
            
            orderBy.on('change', (e) => {
                SetQueryValue("orderby", e.target.value);
            });
        });
        
        function IncrementPageCount() {
            const val = Math.min(parseInt(GetQueryValue("pageCount")) + 1, 10);
            SetQueryValue("pageCount", val)
        }
        function DecrementPageCount() {
            const val = Math.max(parseInt(GetQueryValue("pageCount")) - 1, 1);
            SetQueryValue("pageCount", val)
        }
    </script>
</head>
<body>

<div class="message-window">
    <div class="icon"></div>
    <span id="message"></span>
</div>

<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>

    @if ( !this.User.IsLoggedIn() ) {
        <div><a href="/Login">Login</a> or <a href="/Signup">Sign up</a> to create a post!</div>
    } else {
        <div><a href="/CreatePost">Create a post!</a></div>
    }
</div>

<select class="order-by" style="margin: auto; background-color: var(--container-colour-secondary); padding: 5px; border: none; border-radius: 5px; color: inherit">
    <option value="views">Order by views</option>
    <option value="date">Order by date created</option>
</select>

<div style="margin-top: 15px">
    <span class="button previous" onclick="DecrementPageCount()">&laquo; Previous</span>
    <span class="button next" onclick="IncrementPageCount()">Next &raquo;</span>
</div>

<div>
    @{
        var postResults = await this.Model.GetForumsAsync();
        foreach ( var forum in postResults.Posts ) {
            var forumOwner = AccountService.GetAccountWhere(x => x.Id == forum.OwnerId);

            <div class="message">
                <span class="forum-stats">
                    <div class="forum-stat-elem">
                        <img height="15px" width="15px" src="https://illusivecdn.blob.core.windows.net/container-1/like_button_checked.png" alt="Likes"/>
                        <span style="margin: 3px">@forum.Likes.Count</span>
                    </div>

                    <div class="forum-stat-elem">
                        <img height="10px" src="~/img/forum-views.png" alt="Views"/>
                        <span style="margin: 3px">@forum.Views</span>
                    </div>

                    <div class="forum-stat-elem">
                        <img height="10px" src="~/img/forum-replies.png" alt="Replies"/>
                        <span style="margin: 3px">@forum.Replies.Count</span>
                    </div>
                </span>

                <div class="image"><a href="/Account/@forumOwner?.Id"><img src="@forumOwner?.ProfilePicture" style="height: 25px; max-width: 25px;" alt=""/></a></div>
                <div class="additionalInfo">Created @forum.TimeCreated.ToString("MMMM dd, yyyy") (@forum.TimeCreated.TimeSince().Humanize() ago)</div>
                <div class="user"><a class="debounce" href="/Account/@forumOwner?.Id">[@forumOwner?.AccountName]</a> <a asp-page="/ForumPost" asp-route-id="@forum.Id"> @forum.Title </a></div>
                @if ( forum.Tags != null ) {
                    foreach ( var tag in forum.Tags.Split(',') ) {
                        <div class="forumTag noselect">@tag</div>
                    }
                }
            </div>
        }
        
        <h5>Page @postResults.Page of @postResults.PageCount</h5>
    }
</div>

<br><br>

</body>
</html>