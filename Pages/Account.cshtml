@page "/Account/{id?}"
@inject IForumService ForumService
@inject IAppUserManager UserManager
@using global::Illusive.Database
@using global::Illusive.Illusive.Core.User_Management.Interfaces
@using global::Illusive.Utility
@using Humanizer
@using Microsoft.AspNetCore.Html
@model AccountModel
@{
    ViewData["Title"] = "Account";
    ViewData["Description"] = "Account";
}

<!DOCTYPE html>

<html>
<head>
    <script type="text/javascript" src="~/lib/bootstrap-filestyle.min.js"> </script>
    <script type="text/javascript" src="~/js/Account/requests.js"> </script>

    <style type="text/css"> 
        .change-profile-button {
            cursor: default;
        }
        .change-profile-button:hover {
            cursor: pointer;
        }
        
        .change-profile-container {
            position: absolute;
            border-radius: 15px;
            background-color: var(--container-colour-third);
            width: 500px;
            padding: 20px;
            margin: 5px;
            font-style: inherit;
            box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.15);
            display: none; /*Disable by default*/
        }
        
        /* Style the tab */
        .tab {
          overflow: hidden;
          border: 1px solid #ccc;
          background-color: #f1f1f1;
        }
        
        /* Style the buttons inside the tab */
        .tab button {
          background-color: inherit;
          float: left;
          border: none;
          outline: none;
          cursor: pointer;
          padding: 14px 16px;
          transition: 0.3s;
          font-size: 17px;
        }
        
        /* Change background color of buttons on hover */
        .tab button:hover {
          background-color: #ddd;
        }
        
        /* Create an active/current tablink class */
        .tab button.active {
          background-color: #ccc;
        }
        
        /* Style the tab content */
        .tabcontent {
          display: none;
          padding: 6px 12px;
          border: 1px solid #ccc;
          border-top: none;
        }
    </style>

    <script type="text/javascript">    
        function changeProfileToggle() {
            $(".change-profile-container").fadeToggle();
        }
    </script>
    
    <script>
    function OpenListItem(cityName) {
        const tabcontent = document.getElementsByClassName("tabcontent");
        for (let i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        
        const tablinks = document.getElementsByClassName("tablinks");
        for (let i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
                      
        document.getElementById(cityName).style.display = "block";
        // evt.currentTarget.className += " active";
    }
    
    window.addEventListener("load", () => {
        OpenListItem("Posts"); 
    });
    </script>
    
    <style type="text/css">
        .cover-sec {
            width: 100%;
        }
        .cover-sec img {
            width: 100%;
            max-height: 250px;
        }
        
        .user-profile {
            width: 100%;
            float: left;
            background-color: var(--container-colour-primary);
            border-right: 1px solid var(--container-colour-primary-border);
            border-bottom: 2px solid var(--container-colour-primary-border);
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
        }
        
        .follow-status {
            padding: 0;
            list-style: none;
            justify-content: center;
            display: flex;
        }
        
        .follow-status li {
            display: inline-block;
            margin-right: 30px;
            text-align: center;
        }
        
        .follow-status li:last-child {
            margin-right: 0;
        }
        
        .follow-status li span {
            display: block;
        }
        
        .other-stats {
            list-style: none;
            display: flex;
            padding: 0 15px;
        }
        
        .user-stats {
            width: 100%;
        }
        
        .user-profile-image {
            text-align: center;
            position: relative;
            margin-bottom: 15px;
            margin-top: -95px;
        }
        
        .user-profile-image img {
            border-radius: 999px;
            height: 150px;
            width: 150px;
        }
        
        .user-social-links {
            float: left;
            width: 100%;
            text-align: left;
            padding: 0;
            font-size: 0.8rem;
        }
        
        .user-social-links li {
            float: left;
            width: 100%;
            padding: 10px 15px;
            border-bottom: 1px solid #e5e5e5;
            font-weight: 700;
            
            list-style: none;
        }
        
        .user-overview {
            
        }
        
        .user-feed {
            margin-top: 30px;
        }
        
        .user-post {
            float: left;
            width: 100%;
            border-right: 1px solid var(--container-colour-primary-border);
            border-bottom: 2px solid var(--container-colour-primary-border);
            padding: 15px;
            background-color: var(--container-colour-primary);
            border-radius: 5px;
        }
        
        .user-post-top {
            float: left;
            width: 100%;
            position: relative;
        }
        
        .user-post-content {
        
        }
        
        .user-post-content h3 {
            font-size: 17px;
            font-weight: 600;
            margin-bottom: 6px;
        }
        
        .user-post-content p {
            font-size: 11px;
            font-weight: 600;
            margin-bottom: 6px;
        }
        
        .user-post-top-details {
            display: inline-flex;
        }
        
        .user-post-top-details img {
            border-radius: 999px;
            height: 35px;
            width: 35px;
        }
        
        .user-post-top-details h3 {
            font-size: 12px;
            font-weight: 600;
            margin-bottom: 0;
        }
        
        .user-post-top-details span {
            font-size: 12px;
        }
        
        .user-description span {
            font-size: 0.8rem;
            font-weight: 800;
        }
        
        .settings-btn {
            float: right;
            margin-top: 25px;
            margin-bottom: 30px;
            border-radius: 5px;
            font-size: 16px;
            font-weight: 500;
            text-decoration: none;
        }
        
        .widget {
            float: left;
            width: 100%;
            border-right: 1px solid var(--container-colour-primary-border);
            border-bottom: 2px solid var(--container-colour-primary-border);
            padding: 15px;
            background-color: var(--container-colour-primary);
            border-radius: 3px;
        }
        
        .widget h1 {
            float: left;
            width: 100%;
            padding-bottom: 15px;
            border-bottom: 1px solid #757575;
            font-size: 1.2rem;
            text-align: center;
            font-weight: 600;
        }
        
        .widget p {
            font-weight: 600;
            font-size: 0.7rem;
        }
        
        .user-tab {
        
        }
        
        .user-tab ul {
            float: left;
            width: 100%;
            list-style: none;
            display: flex;
        }
        
        .user-tab ul li {
            margin-right: 25px;
        }
        
        .user-tab ul li:last-child {
            margin-right: 0;
        }
    </style>
</head>
<body>

@{ 
    var accountId = (string)this.HttpContext.Request.RouteValues["id"];
    var user = await UserManager.GetUserByIdAsync(accountId);
}

@functions {

    static HtmlString SocialLinkFor(string profileUrl, string accountName, string classTags, string color) {
        if ( string.IsNullOrEmpty(accountName) )
            return HtmlString.Empty;

        var str = $"<li>" +
                  $"<i class=\"{classTags}\" style=\"color: {color} !important;\"> </i>" +
                  $" <a href=\"{profileUrl}{accountName}\" target=\"_blank\"> {accountName}</a>" +
                  $"</li>";
        return new HtmlString(str);
    }

}

<section class="cover-sec">
    <img src="@user?.CoverPicture" alt="">
</section>

<main>
    <div class="container row">
        <div class="col-lg-3">
            
            <div class="user-profile">
                <div class="user-profile-image">
                    <img src="@user?.ProfilePicture" alt=""/>
                </div>
                
                <div class="user-stats">
                    <ul class="follow-status">
                        <li>
                            <span>Following</span>
                            <b>999</b>
                        </li>
                                    
                        <li>
                            <span>Followers</span>
                            <b>999</b>
                        </li>
                    </ul>
                    <ul class="other-stats">
                        @if ( !string.IsNullOrEmpty(user?.Location) ) {
                            <div>
                                <i class="fa fa-map-marker"></i>
                                <span>@user?.Location</span>
                            </div>
                        }
                    </ul>
                </div>
                
                <ul class="user-social-links">
                    @SocialLinkFor(SocialMediaConstants.TwitterUserUrl, user?.TwitterUrl, "fa fa-twitter text-decoration-none", "#1da1f2")
                    @SocialLinkFor(SocialMediaConstants.LinkedinUserUrl, user?.LinkedinUrl, "fa fa-linkedin text-decoration-none", "#2867b2")
                    @SocialLinkFor(SocialMediaConstants.RedditUserUrl, user?.RedditUrl, "fa fa-reddit text-decoration-none", "#1da1f2")
                    @SocialLinkFor(SocialMediaConstants.SteamUserUrl, user?.SteamUrl, "fa fa-steam text-decoration-none", "#171A21")
                    @SocialLinkFor(SocialMediaConstants.GithubUserUrl, user?.GithubUrl, "fa fa-github text-decoration-none", "#white")
                </ul>
            </div>
        </div>
        
        <div class="col-lg-6 pt-4">
            <div class="user-overview">
                <h3>
                    @user?.UserName
                </h3>
                <div class="user-description">
                    <span>@user?.Bio</span>
                </div>
            </div>

            <div class="user-feed">
                @foreach ( var post in ForumService.GetForumsWhere(x => x.OwnerId == user.Id) ) {
                    if ( post.OwnerId == Guid.Empty ) {
                        continue;
                    }
                    
                    var postOwner = await UserManager.GetUserByIdAsync(post.OwnerId);
                    
                    <div class="user-post">
                        <div class="user-post-top">
                            <div class="user-post-top-details">
                                <img src="@postOwner?.ProfilePicture" alt="">
                                <div class="pl-2">
                                    <h3>@postOwner?.UserName</h3>
                                    <span><i class="fa fa-clock-o"></i> @post.TimeCreated.TimeSince().Humanize() ago</span>
                                </div>
                            </div>
                        </div>

                        <div class="user-post-content">
                            <h3>@post?.Title</h3>
                            <p>
                                @post?.Content.SafeSubstring(0, 225)
                                <a asp-page="/ForumPost" asp-route-id="@post?.Id">Read more</a>
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        <div class="col-lg-3">
            @if ( user?.Id == this.User.GetUniqueId() ) {
                <a asp-page="/AccountChange" class="settings-btn">
                    <button class="btn btn-info">
                        <i class="fa fa-cogs"></i>
                        Profile Settings
                    </button>
                </a>
            }

            <div class="right-column">
                <div class="widget">
                    <h1>Some Widget</h1>
            
                    <p>
                        This is some widget content right here.
                    </p>
                </div>
            </div>
        </div>
    </div>
</main>
</body>
</html>